import React, { useState } from "react";
import Head from "next/head";
import Button from "../components/Button";
import Form from "../components/Form";
import FloatingButton from "../components/FloatingButton";
import Navbar from "../components/Navbar";

export default function Home() {
  const [contentArray, setContentArray] = useState([]);
  const [isEditView, setEditView] = useState(false);
  const [isMoveView, setMoveView] = useState(false);

  const addSection = (type) => {
    let arr = contentArray;
    if (type === "hero") {
      arr.push({
        type: "hero",
        inputFields: [
          {
            label: "Welcome on my website",
            value: "",
            style: "text-8xl font-bold",
          },
          {
            label: "Deliver transparent web-readiness",
            value: "",
            style: "text-4xl mt-4 text-base text-slate-700 font-normal",
          },
        ],
      });
      setContentArray([...arr]);
    } else if (type === "navbar") {
      arr.push({
        type: "navbar",
        inputFields: [
          {
            label: "New title",
            value: "",
            style: "text-4xl mt-4 font-extrabold tracking-tight text-slate-900",
          },
          {
            label:
              "The generator is an innovative tool that utilizes cross-platform viral AI generation",
            value: "",
            style: "mt-4 text-base leading-7 text-slate-700 font-normal",
          },
        ],
      });
    } else {
      arr.push({
        type: "content",
        inputFields: [
          {
            label: "New title",
            value: "",
            style: "text-4xl mt-4 font-extrabold tracking-tight text-slate-900",
          },
          {
            label:
              "The generator is an innovative tool that utilizes cross-platform viral AI generation",
            value: "",
            style: "mt-4 text-base leading-7 text-slate-700 font-normal",
          },
        ],
      });
      setContentArray([...arr]);
    }
  };

  const handleEditView = () => {
    setContentArray([...contentArray]);
    setEditView(!isEditView);
  };

  const handleMoveView = () => {
    setContentArray([...contentArray]);
    setMoveView(!isMoveView);
  };

  const remove = (index) => {
    // contentArray.splice(index, 1);
    // setContentArray([...contentArray]);

    const arr = contentArray;
    setContentArray([...arr.slice(0, index), ...arr.slice(index + 1)]);
  };

  const moveUp = (index) => {
    if (index === 0) {
      return;
    }

    const itemAtIndex = contentArray[index];
    const arr = contentArray;

    arr.splice(index, 1, arr[index - 1]);
    arr.splice(index - 1, 1, itemAtIndex);

    setContentArray([...arr]);
  };

  const moveDown = (index) => {
    if (index === contentArray.length - 1) {
      return;
    }

    const itemAtIndex = contentArray[index];
    const arr = contentArray;

    arr.splice(index, 1, arr[index + 1]);
    arr.splice(index + 1, 1, itemAtIndex);

    setContentArray([...arr]);
  };

  const sectionStyle = (type) => {
    if (type === "header") {
      return "h-20  border-b flex items-center";
    } else if (type === "hero") {
      return "h-80";
    } else if (type === "content") {
      return "h-60";
    } else if (type === "footer") {
      return "h-32 border-t";
    } else {
      return "h-32";
    }
  };

  return (
    <div>
      <Head>
        <title>~ The Original ~</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main>
        <div>
          {contentArray.map((a, componentIndex) => {
            <div key={componentIndex}>{a.type === "navbar" && <Navbar />}</div>;
          })}
        </div>
        <div>
          {contentArray.map((a, componentIndex) => (
            <div
              key={componentIndex}
              className={`${sectionStyle(a.type)} w-full px-6`}
            >
              {contentArray[componentIndex].inputFields && (
                <Form
                  order={componentIndex}
                  content={contentArray}
                  isEditView={isEditView}
                />
              )}
              {isMoveView && (
                <div className="absolute z-10 right-0 space-x-2">
                  <Button onClick={() => moveUp(componentIndex)}>↑</Button>
                  <Button onClick={() => moveDown(componentIndex)}>↓</Button>
                  <Button onClick={() => remove(componentIndex)} color="red">
                    -
                  </Button>
                </div>
              )}
            </div>
          ))}
        </div>
        <div>
          {contentArray.length !== 0 && (
            <>
              <FloatingButton
                isDisabled={isMoveView}
                onClick={handleEditView}
                styles="bottom-10 right-8"
              >
                Edit
              </FloatingButton>
              <FloatingButton
                isDisabled={isEditView}
                onClick={handleMoveView}
                styles="bottom-10 right-32"
              >
                Move
              </FloatingButton>
            </>
          )}

          <FloatingButton
            onClick={() => addSection("navbar")}
            color="blue"
            styles="bottom-64 left-8"
          >
            Navbar
          </FloatingButton>
          <FloatingButton
            onClick={() => addSection("hero")}
            color="blue"
            styles="bottom-32 left-8"
          >
            Hero
          </FloatingButton>
          <FloatingButton
            onClick={() => addSection("content")}
            color="blue"
            styles="bottom-10 left-8"
          >
            Content
          </FloatingButton>
        </div>
      </main>
    </div>
  );
}
