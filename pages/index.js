import React, { useState } from "react";
import Head from "next/head";
import Button from "../components/Button";
import { Form, NavForm } from "../components/Form";
import FloatingButton from "../components/FloatingButton";
import Navbar from "../components/Navbar";

export default function Home() {
  const [contentArray, setContentArray] = useState([]);
  const [isEditView, setEditView] = useState(false);
  // const [isMoveView, setMoveView] = useState(false);
  const [nav, setNav] = useState("");
  const [show, setShow] = useState(true);

  const addSection = (type) => {
    let arr = contentArray;
    if (type === "hero") {
      arr.push({
        type: "hero",
        inputFields: [
          {
            label: "Website",
            value: "",
            // style: "text-8xl font-bold",
          },
          {
            label: "Deliver transparent web-readiness",
            value: "",
            // style: "text-4xl mt-4 text-base text-slate-700 font-normal",
          },
        ],
      });
      setContentArray([...arr]);
    } else if (type === "navbar") {
      arr.push({
        type: "navbar",
        content: [
          {
            label: "Product",
          },
          {
            label: "Pricing",
          },
        ],
      });
      setContentArray([...arr]);
      setShow(false);
    } else {
      arr.push({
        type: "content",
        inputFields: [
          {
            label: "New title",
            value: "",
            style: "text-4xl mt-4 font-extrabold tracking-tight text-slate-900",
          },
          {
            label:
              "The generator is an innovative tool that utilizes cross-platform viral AI generation",
            value: "",
            style: "mt-4 text-base leading-7 text-slate-700 font-normal",
          },
        ],
      });
      setContentArray([...arr]);
    }
  };

  const handleEditView = () => {
    setContentArray([...contentArray]);
    setEditView(!isEditView);
  };

  // const handleMoveView = () => {
  //   setContentArray([...contentArray]);
  //   setMoveView(!isMoveView);
  // };

  const remove = (index) => {
    // contentArray.splice(index, 1);
    // setContentArray([...contentArray]);

    const arr = [...contentArray];
    setContentArray([...arr.slice(0, index), ...arr.slice(index + 1)]);
  };

  const moveUp = (index) => {
    if (index === 0) {
      return;
    }

    const itemAtIndex = contentArray[index];
    const arr = [...contentArray];

    arr.splice(index, 1, arr[index - 1]);
    arr.splice(index - 1, 1, itemAtIndex);

    setContentArray([...arr]);
  };

  const moveDown = (index) => {
    if (index === contentArray.length - 1) {
      return;
    }

    const itemAtIndex = contentArray[index];
    const arr = [...contentArray];

    arr.splice(index, 1, arr[index + 1]);
    arr.splice(index + 1, 1, itemAtIndex);

    setContentArray([...arr]);
  };

  const addNavbarLink = (index) => {
    let arr = [...contentArray];
    arr[index].content.push({
      label: "Link",
    });
    setContentArray([...arr]);
  };

  const getNavbar = () => {
    const newArr = contentArray.find((content) => content.type === "navbar");
    return newArr;
  };

  const onSubmitNav = (index) => (message) => {
    let arr = [...contentArray];
    arr[index].content = [...message];
    setContentArray([...arr]);
    setEditView(!isEditView);
  };

  return (
    <div>
      <Head>
        <title>~ The Original ~</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main>
        {contentArray.map((a, componentIndex) => {
          if (a.type === "navbar") {
            return (
              <div key={componentIndex}>
                {!isEditView && <Navbar items={a.content} />}
                {getNavbar() && isEditView && (
                  <div className="space-x-2">
                    <NavForm
                      content={getNavbar().content}
                      onSubmit={onSubmitNav(componentIndex)}
                    />
                    <Button onClick={() => remove(componentIndex)}>x</Button>
                    <Button onClick={() => addNavbarLink(componentIndex)}>
                      +
                    </Button>
                  </div>
                )}
              </div>
            );
          } else {
            return (
              <div key={componentIndex} className={` w-full px-6`}>
                {contentArray[componentIndex].inputFields && (
                  <Form
                    order={componentIndex}
                    content={contentArray}
                    isEditView={isEditView}
                  />
                )}
                {isEditView && (
                  <div className="absolute z-10 right-0 space-x-2">
                    <Button onClick={() => moveUp(componentIndex)}>↑</Button>
                    <Button onClick={() => moveDown(componentIndex)}>↓</Button>
                    <Button onClick={() => remove(componentIndex)}>X</Button>
                  </div>
                )}
              </div>
            );
          }
        })}
        <div>
          {contentArray.length !== 0 && (
            <FloatingButton onClick={handleEditView} styles="bottom-10 right-8">
              Edit
            </FloatingButton>
          )}
          {getNavbar() === undefined && (
            <FloatingButton
              onClick={() => addSection("navbar")}
              color="blue"
              styles="bottom-56 left-8"
            >
              Add Navbar
            </FloatingButton>
          )}
          <FloatingButton
            onClick={() => addSection("hero")}
            color="blue"
            styles="bottom-32 left-8"
          >
            Hero
          </FloatingButton>
          <FloatingButton
            onClick={() => addSection("content")}
            color="blue"
            styles="bottom-10 left-8"
          >
            Content
          </FloatingButton>
        </div>
      </main>
    </div>
  );
}
